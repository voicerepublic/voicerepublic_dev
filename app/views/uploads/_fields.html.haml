- content_for :javascript do
  = render partial: 'config'

.form-top-box.row
  .medium-12.columns
    .title-box
      %h2.form-title= t('.upload_a_recording')

    -#= f.error_messages

    - opts = {}
    -# TODO some fields are protected after state prelive, add this to cancan
    -#- opts[:disabled] = true unless f.object.created?

    -# if new record and upload has already finished
    = f.input :user_override_uuid, as: :hidden
    - if f.object.new_record? and f.object.user_override_uuid?
      .title-box.clearfix
        .help-text.left= t('.upload_done')
    - else
      = render partial: 'shared/upload',
               locals: { f: f, ns: 'audio', init: init_audio_uploader }

    .title-box.clearfix
      %h2.form-title= t('.describe_your_talk')
    .row.title-teaser-box
      .medium-7.columns
        = f.input :title, placeholder: t('.title')
        = f.input :teaser, placeholder: t('.teaser'), as: "text", input_html: {maxlength: 140}
      .medium-5.columns
        = f.input :language, as: :grouped_select, collection: Talk::LANGUAGES,
          input_html: { class: 'languageSelect' },
          group_method: :last, label_method: :last, value_method: :first
        = f.input :tag_list, input_html: { class: 'tagList' }

    .row
      .medium-12.columns
        = f.input :speakers

    .title-box.clearfix
      %h2.form-title= t('.choose_date_and_time')
    .date-time-picker-row.row
      .medium-6.columns
        = f.input :starts_at_date, opts.merge(input_html: {'data-picker' => 'date'})
      .medium-6.columns
        = f.input :starts_at_time, opts.merge(input_html: {'data-picker' => 'time'})

    .title-box.clearfix
      %h2.form-title.left= t('.add_to_series')
      .help-text.left= t('.series_help_text')
    .row
      .medium-6.columns
        = f.association :series, collection: current_user.series,
          include_blank: t('.create_new_series'),
          input_html: { 'data-on-blank-show' => '#wrapper_new_series_title' }
      .medium-6.columns
        = f.input :new_series_title, wrapper_html: { id: 'wrapper_new_series_title' }

    .title-box.clearfix
      %h2.form-title.left= t('.illustrate_and_describe')
      .help-text.left= t('.ill_and_desc_text')
    .row
      .medium-3.columns
        .image-box(style="background-image: url(#{f.object.image.url})" data-show-upload="#talk_image,#series_talks_attributes_0_image")
      .medium-9.columns
        %button.button-standard(type="button" data-trigger-file-input="#talk_image")
          = t('.select_image')
        = f.file_field :image, as: :file, class: 'soft-hide'

    .row
      .medium-12.columns
        = f.input :description, input_html: { rows: 10 }

    .title-box.clearfix
      %h2.form-title.left= t('.upload_slides')
      = f.input :slides_uuid, as: :hidden
      - if f.object.new_record? and f.object.slides_uuid?
        .help-text.left= t('.upload_done')
      - else
        = render partial: 'shared/upload',
                 locals: { f: f, ns: 'slides', init: init_slides_uploader }
