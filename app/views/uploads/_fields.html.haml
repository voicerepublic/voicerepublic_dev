.row.uploads-form
  %h2.form-title.text-center= t('.upload_a_recording')
  -#= f.error_messages
  - opts = {}
  -# TODO some fields are protected after state prelive, add this to cancan
  -#- opts[:disabled] = true unless f.object.created?

  -# if new record and upload has already finished
  = f.input :user_override_uuid, as: :hidden
  - if f.object.new_record? and f.object.user_override_uuid?
    .title-box.clearfix
      .help-text.text-center= t('.upload_done')
  - else
    = render partial: 'shared/upload', locals: { f: f, ns: 'audio', init: init_audio_uploader }

  .title-box.clearfix
    %h3.form-title= t('.describe_your_talk')
  .row
    = f.input :title, placeholder: t('.title')
    = f.input :teaser, placeholder: t('.teaser'), as: "text", input_html: {maxlength: 140}
    = f.input :language, as: :grouped_select, collection: Talk::LANGUAGES,
      group_method: :last, label_method: :last, value_method: :first
    = f.input :tag_list, input_html: { class: 'tagList' }
    = f.input :speakers
  %hr

  %h3.form-title= t('.choose_date_and_time')
  .date-time-picker-row.row
    .medium-6.columns
      = f.input :starts_at_date, opts.merge(input_html: {'data-picker' => 'date'})
    .medium-6.columns
      = f.input :starts_at_time, opts.merge(input_html: {'data-picker' => 'time'})
  %hr

  %h3.form-title.left= t('.add_to_series')
  .help-text.text-center= t('.series_help_text')
  .row
    .medium-6.columns
      = f.association :series, collection: current_user.series,
        include_blank: t('.create_new_series'),
        input_html: { 'data-on-blank-show' => '#wrapper_new_series_title' }
    .medium-6.columns
      = f.input :new_series_title, wrapper_html: { id: 'wrapper_new_series_title' }
  %hr

  .title-box.clearfix
    %h3.form-title.left= t('.illustrate_and_describe')
    .help-text.text-center= t('.ill_and_desc_text')
  .row
    .text-center
      .image-box(style="background-image: url(#{f.object.image.url})")
      = f.input :image, as: :file, wrapper_html: { class: 'inputfile' }, label: icon_tag("photo") + t('.change_photo').html_safe, input_html: {'data-instant-image' => '.image-box | .image-label'}, label_html: {class: 'image-label button hollow tiny btn-hover-yellow'}

  .row
    .medium-12.columns
      = f.input :description, input_html: { rows: 10 }
  %hr

  -#.title-box.clearfix
  -#  %h3.form-title.left= t('.upload_slides')
  -#  = f.input :slides_uuid, as: :hidden
  -#  - if f.object.new_record? and f.object.slides_uuid?
  -#    .help-text.left= t('.upload_done')
  -#  - else
  -#    = render partial: 'shared/upload',
  -#             locals: { f: f, ns: 'slides', init: init_slides_uploader }
