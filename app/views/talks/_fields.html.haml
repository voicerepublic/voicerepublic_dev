= f.input :dryrun, as: :hidden
= f.input :venue_id, as: :hidden

.row.talk-form
  %h2.text-center.form-title= form_title
  = render "dryrun" if @talk.dryrun?


  -#= f.error_messages

  - opts = {}

  - unless f.object.new_record?
    = f.input :user_override_uuid, as: :hidden
    = render partial: 'shared/upload',
             locals: { f: f, ns: 'audio', init: init_audio_uploader }

  .row
    = f.input :title
    = f.input :teaser, input_html: {maxlength: 140}
    = f.input :language, as: :grouped_select, collection: Talk::LANGUAGES,
      group_method: :last, label_method: :last, value_method: :first
    = f.input :tag_list, input_html: { class: 'tagList', value: @talk.tag_list.join(',') }
    = f.input :speakers
  %hr

  .row
    %h3.form-title= t('.choose_date_and_time')
    .row.pickers
      .medium-4.columns.collapsed
        - disable = [:live].include?(@talk.state.to_sym)
        = f.input :starts_at_date, opts.merge(input_html: {'data-picker' => 'date'}, disabled: disable)
      .medium-4.columns
        = f.input :starts_at_time, opts.merge(input_html: {'data-picker' => 'time'}, disabled: disable)
      .medium-4.columns
        = f.input :duration, opts.merge(collection: @talk.durations, include_blank: false, disabled: disable)

      .medium-12.columns.hint
        = t('simple_form.hints.talk.timings')
  %hr

  .title-box.clearfix
    %h3.form-title.left= t('.add_to_series')
  .row.pickers
    .medium-6.columns
      = f.association :series, collection: current_user.series,
        include_blank: t('.create_new_series'),
        input_html: { 'data-on-blank-show' => '#wrapper_new_series_title' }
    .medium-6.columns
      = f.input :new_series_title, wrapper_html: { id: 'wrapper_new_series_title' }
    .medium-12.columns
      .hint= t('.series_help_text')
  %hr

  .title-box.clearfix
    %h3.form-title.left= t('.add_to_venue')
  .row.pickers
    .medium-6.columns
      = f.association :venue, collection: current_user.venues,
        include_blank: t('.create_new_stage'),
        input_html: { 'data-on-blank-show' => '#wrapper_new_venue_name' }
    .medium-6.columns
      = f.input :new_venue_name, wrapper_html: { id: 'wrapper_new_venue_name' }
    .medium-12.columns
      .hint= t('.venue_help_text')
  %hr

  .title-box.clearfix
    %h3.form-title.left= t('.illustrate_and_describe')
    .hint= t('.ill_and_desc_text')
  .row
    .text-center
      .image-box(style="background-image: url(#{f.object.talk_image_url})")
      = f.input :image, as: :file, wrapper_html: { class: 'inputfile' }, label: icon_tag("photo") + t('.change_photo').html_safe, input_html: {'data-instant-image' => '.image-box | .image-label'}, label_html: {class: 'image-label button hollow tiny btn-hover-yellow'}
  %hr

  .row
    = f.input :description, input_html: { rows: 10 }
  %hr

  .row
    %h3.form-title= t('.slides')
    -#.hint= t('.slides_help_text')

    = f.input :slides_uuid, as: :hidden
    = render partial: 'shared/upload',
      locals: { f: f, ns: 'slides', init: init_slides_uploader }
